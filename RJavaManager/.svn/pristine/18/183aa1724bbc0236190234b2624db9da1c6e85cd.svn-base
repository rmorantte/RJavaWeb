text(MGEN[, 4], MGEN[, 5], cex = 0, text(MGEN[, 4], MGEN[, 5]+2, labels = row.names(MGEN), col = "blue"))
}
points(MENV[, 4], MENV[, 5], cex = 0, text(MENV[, 4], MENV[, 5]+2, labels = row.names(MENV), col = "red"))
abline(h = 0, v = 0, lty = 2.5, col = "green", lwd = 1)
s <- seq(length(MENV[, 3]))
arrows(0, 0, 0.9 * MENV[, 4][s], 0.9 * MENV[, 5][s], col = "brown", lwd = 1.8, length = 0.1, code = 2)
#legend("topleft", NULL, pch = c("1", "2"), cp.per[1:2], title = "PC     %", lty = 0)
dev.off()
pred.yld <- as.matrix(rep(0,e*g),nrow=e,ncol=g)
dim(pred.yld) <- c(e,g)
for (i in 1:g)   {
for (j in 1:e)
pred.yld[j,i] <- geno$Yield[i] + geno$PC1[i]*env.PC1[j]
}
pred.yld <- as.data.frame(pred.yld)
names(pred.yld) <- levels(data$Geno)
pred.yld <- cbind(pred.yld, env.PC1)
str(pred.yld)
MIN.Y <- round(min(pred.yld[1:g]),0)
MAX.Y <- round(max(pred.yld[1:g]),0)
MIN.X <- round(min(pred.yld[g+1]),0)
MAX.X <- round(max(pred.yld[g+1]),0)
par(mar=c(5,4,7,1)+0.1)
Y3 <- data.frame(V1=env$PC1, env$name)
Y3.sort <- Y3[order(Y3$V1),]
Y3.sort <- cbind(Y3.sort, 1:e, LETTERS[1:e])
Y3.sort
for (i in 1:g)  {
if (i==1)  {
plot(pred.yld[[g+1]],pred.yld[[i]], pch=" ", ylim=c(MIN.Y,MAX.Y), xlim=c(MIN.X,MAX.X),
main=, xlab="Environment IPCA1", ylab="Predicted Yield")
abline(lm(pred.yld[[i]]~pred.yld[[g+1]]),col=i)
}
abline(lm(pred.yld[[i]]~pred.yld[[g+1]]),col=i)
}
label1 <- rep(" ",7)
title("Adaptation Map", line=4)
text(pred.yld[[e,i+1]]-1, pred.yld[e,c(2:4,7,8,10)],
labels=geno$name[c(2:4,7,8,10)],col=1)
text(pred.yld[[e,i+1]]-4, pred.yld[e,c(1,5,6,9)],
labels=geno$name[c(1,5,6,9)],col=1)
axis(side=3, at=Y3.sort[c(1:5,6,8,9,11:13,16,17,20,22,23),1],
labels=Y3.sort[c(1:5,6,8,9,11:13,16,17,20,22,23),4],las=3)
axis(side=3, at=Y3.sort[c(7,10,14,15,18,19,21),1],
labels=label1, las=3)
mtext(text=Y3.sort[c(7,10,14,18,21),4], side=3,
at=Y3.sort[c(7,10,14,18,21),1], line=1.7, cex=0.6, las=3)
mtext(text=Y3.sort[c(15,19),4], side=3, at=Y3.sort[c(15,19),1],
line=2.5, cex=0.6, las=3)
bplot[bplot$type=="ENV",3]
bplot
env.PC1 <- sort(bplot[bplot$type=="ENV",3])
env.PC1
pred.yld <- as.matrix(rep(0,nenv*ngen),nrow=nenv,ncol=ngen)
dim(pred.yld) <- c(nenv,ngen)
MGEN
i=1
MGEN[i, 2]
geno$PC1[i]
j=1
env.PC1[j]
for (i in 1:ngen)   {
for (j in 1:nenv)
pred.yld[j,i] <- MGEN[i, 2] + geno$PC1[i]*env.PC1[j]
}
pred.yld <- as.data.frame(pred.yld)
pred.yld
geno
MGEN
geno
bplot
geno <- bplot[bplot$type=="GEN",c(2:5)]
geno
env <- bplot[bplot$type=="ENV", c(2:5)]
env
geno <- data.frame(name=rownames(geno),geno)
geno
env <- bplot[bplot$type=="ENV", c(2:5)]
env <- data.frame(name=rownames(env),env)
env
pred.yld <- as.matrix(rep(0,nenv*ngen),nrow=nenv,ncol=ngen)
dim(pred.yld) <- c(nenv,ngen)
geno
geno[1,2]
for (i in 1:ngen)   {
for (j in 1:nenv)
pred.yld[j,i] <- geno[i,2] + geno$PC1[i]*env.PC1[j]
}
pred.yld <- as.data.frame(pred.yld)
pred.yld
names(pred.yld)
unique(ENV)
nenv
ngen
names(pred.yld) <- unique(GEN)
pred.yld
geno
names(pred.yld)
names(pred.yld) <- geno$name
names(pred.yld)
pred.yld <- cbind(pred.yld, env.PC1)
str(pred.yld)
pred.yld[1:ngen]
pred.yld[ngen+1]
ncol(pred.yld)
ngen
pred.yld
MIN.Y <- round(min(pred.yld[1:ngen]),0)
MAX.Y <- round(max(pred.yld[1:ngen]),0)
MIN.X <- round(min(pred.yld[ngen+1]),0)
MIN.X <- round(min(pred.yld[ngen+1]),0)
MAX.X <- round(max(pred.yld[ngen+1]),0)
Y3 <- data.frame(V1=env$PC1, env$name)
Y3
env
Y3.sort <- Y3[order(Y3$V1),]
Y3.sort <- cbind(Y3.sort, 1:e, LETTERS[1:e])
Y3.sort
i=1
plot(pred.yld[[ngen+1]],pred.yld[[i]], pch=" ", ylim=c(MIN.Y,MAX.Y), xlim=c(MIN.X,MAX.X), main=, xlab="Environment IPCA1", ylab="Predicted Yield")
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
i=1
pred.yield
pred.yld
pred.yld[[i]]
i=2
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
for (i in 1:ngen)  {
if (i==1)  {
plot(pred.yld[[ngen+1]],pred.yld[[i]], pch=" ", ylim=c(MIN.Y,MAX.Y), xlim=c(MIN.X,MAX.X), main=, xlab="Environment IPCA1", ylab="Predicted Yield")
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
}
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
}
label1 <- rep(" ",7)
label1
title("Adaptation Map", line=4)
text(pred.yld[[e,i+1]]-1, pred.yld[e,c(2:4,7,8,10)], labels=geno$name[c(2:4,7,8,10)],col=1)
e
pred.yld[[nenv,i+1]]
pred.yld
i=1
for (i in 1:g)  {
if (i==1)  {
plot(pred.yld[[g+1]],pred.yld[[i]], pch=" ", ylim=c(MIN.Y,MAX.Y), xlim=c(MIN.X,MAX.X),
main=, xlab="Environment IPCA1", ylab="Predicted Yield")
abline(lm(pred.yld[[i]]~pred.yld[[g+1]]),col=i)
}
abline(lm(pred.yld[[i]]~pred.yld[[g+1]]),col=i)
}
label1 <- rep(" ",7)
title("Adaptation Map", line=4)
i
pred.yld[[e,i+1]]
pred.yld[nenv,c(2:4,7,8,10)]
text(pred.yld[[nenv,i+1]]-1, pred.yld[nenv,c(1:ngen)], labels=geno$name,col=1)
Y3.sort[c(1:5,6,8,9,11:13,16,17,20,22,23),1]
Y3.sort
axis(side=3, at=Y3.sort[,1], labels=Y3.sort[,2],las=3)
axis(side=1, at=Y3.sort[,1], labels=Y3.sort[,2],las=3)
axis(side=1, at=Y3.sort[,1], labels=Y3.sort[,2],las=3, col=2)
for (i in 1:ngen)  {
if (i==1)  {
plot(pred.yld[[ngen+1]],pred.yld[[i]], pch=" ", ylim=c(MIN.Y,MAX.Y), xlim=c(MIN.X,MAX.X), main=, xlab="Environment IPCA1", ylab="Predicted Yield")
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
}
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
}
label1 <- rep(" ",7)
title("Adaptation Map", line=4)
text(pred.yld[[nenv,i+1]]-1, pred.yld[nenv,c(1:ngen)], labels=geno$name,col=1)
axis(side=3, at=Y3.sort[,1], labels=Y3.sort[,2],las=3, col=2)
axis(side=3, at=Y3.sort[,1], labels=Y3.sort[,2],las=3, col=1)
mtext(text=Y3.sort[c(7,10,14,18,21),4], side=3,
at=Y3.sort[c(7,10,14,18,21),1], line=1.7, cex=0.6, las=3)
mtext(text=Y3.sort[c(15,19),4], side=3, at=Y3.sort[c(15,19),1],
line=2.5, cex=0.6, las=3)
yVar
yLabel<-paste("Predicted ", gsub("_means", "", yVar), sep="")
yLabel
geno
i=1
j=1
geno[i,2]
geno$PC1[i]
env.PC1[j]
env.PC1
geno[i,2] + geno$PC1[i]*env.PC1[j]
bplot
pred.yld
library(PBTools)
library(PBTools)
dataMeaOneStage <- read.csv("E:/NSALES/juno workspace/workspace_1/RJavaManager/sample_datasets/RCB_ME_env3.csv", header = TRUE, na.strings = c("NA","."," ",""), blank.lines.skip=TRUE, sep = ",")
setwd("E:/NSALES/juno workspace/workspace_1/RJavaManager/sample_datasets/")
meaOne1 <- try(GEOneStage.test("RCB",dataMeaOneStage,c("Yield"),"Genotype","Block",column = NULL, rep = NULL,"environment", is.genoRandom = FALSE), silent=TRUE)
genoEnvMeans <- meaOne1$output[[1]]$means.GenoEnv
ENV <- genoEnvMeans[,match("environment", names(genoEnvMeans))]
GEN <- genoEnvMeans[,match("Genotype", names(genoEnvMeans))]
REP <- meaOne1$output[[1]]$harmonicMean
Y <- genoEnvMeans[,match("Yield_means", names(genoEnvMeans))]
MSE <- meaOne1$output[[1]]$MSE
number <- FALSE
graph <- "biplot"
yVar <- "Yield_means"
#name.y <- paste(deparse(substitute(Y)))
#cat("\nANALYSIS AMMI: ", name.y, "\nClass level information\n")
ENV <- as.factor(ENV)
GEN <- as.factor(GEN)
nenv <- length(unique(ENV))
ngen <- length(unique(GEN))
#cat("\nENV: ", unique(as.character(ENV)))
#cat("\nGEN: ", unique(as.character(GEN)))
minimo <- min(ngen, nenv)
if (length(REP) > 1) {
REP <- as.factor(REP)
nrep <- length(unique(REP))
#cat("\nREP: ", unique(REP))
#cat("\n\nNumber of observations: ", length(na.omit(Y)), "\n\n")
modelo <- aov(Y ~ ENV + REP %in% ENV + GEN + ENV:GEN)
#cat("model Y:", name.y, " ~ ENV + REP%in%ENV + GEN + ENV:GEN\n")
#cat("Random effect REP%in%ENV\n\n")
mm <- anova(modelo)
nn <- mm[2, ]
mm[2, ] <- mm[3, ]
mm[3, ] <- nn
row.names(mm)[2] <- "REP(ENV)"
row.names(mm)[3] <- "GEN     "
mm[1, 4] <- mm[1, 3]/mm[2, 3]
mm[1, 5] <- 1 - pf(mm[1, 4], mm[1, 1], mm[2, 1])
#print(mm)
DFE <- df.residual(modelo)
MSE <- deviance(modelo)/DFE
medy <- mean(Y,na.rm=TRUE)
#cat("\nCoeff var", "\tMean", name.y, "\n")
#cat(sqrt(MSE) * 100/medy, "\t", medy, "\n")
}
DFE <- nenv * (ngen - 1) * (REP - 1)
DFEa <- nenv * (REP - 1)
nrep <- REP
modelo <- aov(Y ~ ENV + GEN + ENV:GEN)
xx <- as.matrix(anova(modelo))
xx <- rbind(xx[1, ], xx[1, ], xx[2:4, ])
xx[2, 1] <- DFEa
xx[2, 2:5] <- NA
xx[, 2] <- xx[, 2] * nrep
xx[, 3] <- xx[, 3] * nrep
xx[5, 1] <- DFE
xx[5, 3] <- MSE
xx[5, 2] <- MSE * DFE
xx[1, 4] <- NA
xx[3, 4] <- xx[3, 3]/MSE
xx[4, 4] <- xx[4, 3]/MSE
xx[1, 5] <- NA
xx[3, 5] <- 1 - pf(xx[3, 4], xx[3, 1], DFE)
xx[4, 5] <- 1 - pf(xx[4, 4], xx[4, 1], DFE)
row.names(xx)[1] <- "ENV     "
row.names(xx)[2] <- "REP(ENV)"
#cat("\nREP: ", REP)
#cat("\n\nNumber of means: ", length(na.omit(Y)), "\n")
#cat("\nDependent Variable:", name.y, "\n\nAnalysis of variance\n")
#print(xx, na.print = "")
medy <- mean(Y,na.rm=TRUE)
#cat("\nCoeff var", "\tMean", name.y, "\n")
#cat(sqrt(MSE) * 100/medy, "\t", medy, "\n")
raw <- data.frame(ENV, GEN, Y)
MEDIAS <- tapply(raw[, 3], raw[, c(1, 2)], mean)
xx <- rownames(MEDIAS)
yy <- colnames(MEDIAS)
fila <- length(xx)
col <- length(yy)
total <- fila * col
x <- character(length = total)
y <- character(length = total)
z <- numeric(length = total)
k <- 0
for (i in 1:fila) {
for (j in 1:col) {
k <- k + 1
x[k] <- xx[i]
y[k] <- yy[j]
z[k] <- MEDIAS[i, j]
}
}
MEDIAS <- data.frame(ENV=x, GEN=y, Y=z)
x <- MEDIAS[, 1]
y <- MEDIAS[, 2]
z <- MEDIAS[, 3]
modelo2 <- lm(z ~ x + y)
for (i in 1:length(z)) {
if (is.na(z[i]))
z[i] <- predict(modelo2, data.frame(x = MEDIAS[i,
1], y = MEDIAS[i, 2]))
}
MEDIAS <- data.frame(ENV = x, GEN = y, Y = z)
modelo1 <- lm(Y ~ ENV + GEN, data = MEDIAS)
residual <- modelo1$residuals
MEDIAS <- data.frame(MEDIAS, RESIDUAL = residual)
mlabel <- names(MEDIAS)
names(MEDIAS) <- c(mlabel[1:2], yVar, mlabel[4])
OUTRES <- MEDIAS[order(MEDIAS[, 1], MEDIAS[, 2]), ]
OUTRES2 <- by(OUTRES[, 4], OUTRES[, c(2, 1)], function(x) sum(x))
OUTMED <- by(OUTRES[, 3], OUTRES[, c(2, 1)], function(x) sum(x))
s <- svd(OUTRES2)
U <- s$u
L <- s$d
V <- s$v
L <- L[1:minimo]
SS <- (L^2) * nrep
SUMA <- sum(SS)
percent <- round(((1/SUMA) * SS) * 100, 1)
minimo <- min(ngen, nenv)
DFAMMI <- rep(0, minimo)
acum <- DFAMMI
MSAMMI <- DFAMMI
F.AMMI <- DFAMMI
PROBF <- DFAMMI
acumula <- 0
for (i in 1:minimo) {
DF <- (ngen - 1) + (nenv - 1) - (2 * i - 1)
if (DF <= 0) break
DFAMMI[i] <- DF
acumula <- acumula + percent[i]
acum[i] <- acum[i] + acumula
MSAMMI[i] <- SS[i]/DFAMMI[i]
F.AMMI[i] <- round(MSAMMI[i]/MSE, 2)
PROBF[i] <- round(1 - pf(F.AMMI[i], DFAMMI[i], DFE), 4)
}
SS <- round(SS, 6)
MSAMMI <- round(MSAMMI, 6)
SSAMMI <- data.frame(percent, acum, Df = DFAMMI, "Sum Sq" = SS,
"Mean Sq" = MSAMMI, "F value" = F.AMMI, Pr.F = PROBF)
nssammi<-nrow(SSAMMI)
SSAMMI<-SSAMMI[SSAMMI$Df>0,]
nss<-nrow(SSAMMI)
row.names(SSAMMI) <- paste("PC", 1:nss, sep = "")
#cat("\nAnalysis\n")
#print(SSAMMI)
LL <- sqrt(diag(L))
SCOREG <- U %*% LL
SCOREE <- V %*% LL
SCORES <- rbind(SCOREG, SCOREE)
colnames(SCORES) <- paste("PC", 1:nssammi, sep = "")
MSCORES <- SCORES[1:ngen, ]
NSCORES <- SCORES[(ngen + 1):(ngen + nenv), ]
MGEN <- data.frame(type = "GEN", Y = apply(OUTMED, 1, mean),
MSCORES)
MENV <- data.frame(type = "ENV", Y = apply(OUTMED, 2, mean),
NSCORES)
# added by NSALES
commonRowNames<-intersect(row.names(MGEN),row.names(MENV))
if (length(commonRowNames)>0) {
row.names(MGEN)<-paste("GEN_",row.names(MGEN),sep="") #added by NSALES
row.names(MENV)<-paste("ENV_",row.names(MENV),sep="") #added by NSALES
}
bplot <- rbind(MGEN, MENV)
bplot<- bplot[,1:(nss+2)]
mlabel <- names(bplot)
names(bplot) <- c(mlabel[1], yVar, mlabel[c(-1, -2)])
maxy <- max(bplot[, 4])
miny <- min(bplot[, 4])
maxx <- max(bplot[, 3])
minx <- min(bplot[, 3])
row.names(bplot) <- c(row.names(MGEN), row.names(MENV))
cp.name <- rownames(SSAMMI)[1:3]
cp.per <- SSAMMI[1:3, 1]
# save PC scores to csv file - added by NSALES
pcScoreFilename<-paste(getwd(),"/PC_scores_",yVar,".csv",sep = "")
write.csv(bplot, file=pcScoreFilename)
# Create new variable color_code
Type.code <- as.numeric(bplot$type)
(graph == "biplot")
(ncol(bplot)>3)
par(cex=0.8)
plot(bplot[,3],bplot[,4],cex=0.8, xlab = "PC 1", ylab = "PC 2", frame = TRUE, pch=Type.code,col=Type.code)
if (number == TRUE) {
text(MGEN[, 3], MGEN[, 4], cex = 0, text(MGEN[, 3], MGEN[, 4]+1, labels = as.character(1:nrow(MGEN)), col = "blue"))
}
if (number == FALSE) {
text(MGEN[, 3], MGEN[, 4], cex = 0, text(MGEN[, 3], MGEN[, 4]+1, labels = row.names(MGEN), col = "blue"))
#text(MGEN[, 3], MGEN[, 4]+2, cex = 0, labels = row.names(MGEN), col = "blue")
}
points(MENV[, 3], MENV[, 4], cex = 0, text(MENV[, 3], MENV[, 4]+1, labels = row.names(MENV), col = "red"))
abline(h = 0, v = 0, lty = 2.5, col = "green", lwd = 1)
s <- seq(length(MENV[, 3]))
arrows(0, 0, 0.9 * MENV[, 3][s], 0.9 * MENV[, 4][s], col = "brown", lwd = 1.8, length = 0.1, code = 2)
par(cex=0.8)
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
(number == TRUE)
(number == FALSE)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+1, labels = row.names(MGEN), col = "blue"))
MGEN[, 3]
MGEN[, 5]
row.names(MGEN)
bplot[,3]
bplot[,5]
MGEN[, 5]+1
MGEN[, 5]+(0.01*MGEN[, 5])
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(0.01*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
par(cex=0.8)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(0.05*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(1.05*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(1.05*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(0.99*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(0.01*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(0.01*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(0.03*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(0.05*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+(0.05*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+abs(0.05*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+abs(0.05*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+abs(0.07*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+abs(0.07*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,4],cex=0.8, xlab = "PC 1", ylab = "PC 2", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 4], cex = 0, text(MGEN[, 3], MGEN[, 4]+abs(0.07*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,4],cex=0.8, xlab = "PC 1", ylab = "PC 2", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 4], cex = 0, text(MGEN[, 3], MGEN[, 4]+abs(0.07*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,4],cex=0.8, xlab = "PC 1", ylab = "PC 2", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 4], cex = 0, text(MGEN[, 3], MGEN[, 4]+abs(0.1*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
points(MENV[, 3], MENV[, 4], cex = 0, text(MENV[, 3], MENV[, 4]+1, labels = row.names(MENV), col = "red"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+abs(0.07*MGEN[, 5]), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+abs(0.07*max(MGEN[, 5])), labels = row.names(MGEN), col = "blue"))
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+abs(0.03*max(MGEN[, 5])), labels = row.names(MGEN), col = "blue"))
abline(h = 0, v = 0, lty = 2.5, col = "green", lwd = 1)
points(MENV[, 3], MENV[, 5], cex = 0, text(MENV[, 3], MENV[, 5]+abs(0.03*max(MENV[, 5])), labels = row.names(MENV), col = "red"))
abline(h = 0, v = 0, lty = 2.5, col = "green", lwd = 1)
s <- seq(length(MENV[, 3]))
arrows(0, 0, 0.9 * MENV[, 3][s], 0.9 * MENV[, 5][s], col = "brown", lwd = 1.8, length = 0.1, code = 2)
plot(bplot[,3],bplot[,5],cex=0.8, xlab = "PC 1", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 5], cex = 0, text(MGEN[, 3], MGEN[, 5]+abs(0.04*max(MGEN[, 5])), labels = row.names(MGEN), col = "blue"))
points(MENV[, 3], MENV[, 5], cex = 0, text(MENV[, 3], MENV[, 5]+abs(0.04*max(MENV[, 5])), labels = row.names(MENV), col = "red"))
s <- seq(length(MENV[, 3]))
arrows(0, 0, 0.9 * MENV[, 3][s], 0.9 * MENV[, 5][s], col = "brown", lwd = 1.8, length = 0.1, code = 2)
par(cex=0.8)
plot(bplot[,3],bplot[,4],cex=0.8, xlab = "PC 1", ylab = "PC 2", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 3], MGEN[, 4], cex = 0, text(MGEN[, 3], MGEN[, 4]+abs(0.04*max(MGEN[, 4])), labels = row.names(MGEN), col = "blue"))
points(MENV[, 3], MENV[, 4], cex = 0, text(MENV[, 3], MENV[, 4]+abs(0.04*max(MENV[, 4])), labels = row.names(MENV), col = "red"))
abline(h = 0, v = 0, lty = 2.5, col = "green", lwd = 1)
s <- seq(length(MENV[, 3]))
arrows(0, 0, 0.9 * MENV[, 3][s], 0.9 * MENV[, 4][s], col = "brown", lwd = 1.8, length = 0.1, code = 2)
plot(bplot[,4],bplot[,5],cex=0.8, xlab = "PC 2", ylab = "PC 3", frame = TRUE, pch=Type.code,col=Type.code)
text(MGEN[, 4], MGEN[, 5], cex = 0, text(MGEN[, 4], MGEN[, 5]+abs(0.04*max(MGEN[, 5])), labels = row.names(MGEN), col = "blue"))
points(MENV[, 4], MENV[, 5], cex = 0, text(MENV[, 4], MENV[, 5]+abs(0.04*max(MENV[, 5])), labels = row.names(MENV), col = "red"))
abline(h = 0, v = 0, lty = 2.5, col = "green", lwd = 1)
s <- seq(length(MENV[, 3]))
arrows(0, 0, 0.9 * MENV[, 4][s], 0.9 * MENV[, 5][s], col = "brown", lwd = 1.8, length = 0.1, code = 2)
plot(bplot[,yVar],bplot$PC1,cex=0.8, main="AMMI1 Biplot", frame=TRUE,xlab="Mean", ylab="PC1", pch=Type.code,col=Type.code)
text(MGEN[,2], MGEN[,3]+abs(0.04*max(MGEN[,3]), labels=row.names(MGEN),col=1)
text(MGEN[,2], MGEN[,3]+abs(0.04*max(MGEN[,3])), labels=row.names(MGEN),col=1)
text(MENV[,2], MENV[,3]+abs(0.04*max(MENV[,3])),labels=row.names(MENV),col=2)
MEANS<-mean(bplot[,yVar])
abline(h=0,v= MEANS,lty=2,col="blue")
plot(bplot[,yVar],bplot$PC1,cex=0.8, main="AMMI1 Biplot", frame=TRUE,xlab="Mean", ylab="PC1", pch=Type.code,col=Type.code)
text(MGEN[,2], MGEN[,3]+abs(0.04*max(MGEN[,3])), labels=row.names(MGEN),col="blue")
text(MENV[,2], MENV[,3]+abs(0.04*max(MENV[,3])),labels=row.names(MENV),col=2)
MEANS<-mean(bplot[,yVar])
abline(h=0,v= MEANS,lty=2,col="green")
geno <- bplot[bplot$type=="GEN",c(2:3)]
geno <- data.frame(name=rownames(geno),geno)
env <- bplot[bplot$type=="ENV", c(2:3)]
env <- data.frame(name=rownames(env),env)
env.PC1 <- sort(bplot[bplot$type=="ENV",3])
pred.yld <- as.matrix(rep(0,nenv*ngen),nrow=nenv,ncol=ngen)
dim(pred.yld) <- c(nenv,ngen)
for (i in 1:ngen)   {
for (j in 1:nenv)
pred.yld[j,i] <- geno[i,2] + geno$PC1[i]*env.PC1[j]
}
pred.yld <- as.data.frame(pred.yld)
names(pred.yld) <- geno$name
pred.yld <- cbind(pred.yld, env.PC1)
MIN.Y <- round(min(pred.yld[1:ngen]),0)
MAX.Y <- round(max(pred.yld[1:ngen]),0)
MIN.X <- round(min(pred.yld[ngen+1]),0)
MAX.X <- round(max(pred.yld[ngen+1]),0)
par(mar=c(5,4,7,1)+0.1)
Y3 <- data.frame(V1=env$PC1, env$name)
Y3.sort <- Y3[order(Y3$V1),]
par(cex=0.8)
for (i in 1:ngen)  {
if (i==1)  {
yLabel<-paste("Predicted ", gsub("_means", "", yVar), sep="")
plot(pred.yld[[ngen+1]],pred.yld[[i]], pch=" ", ylim=c(MIN.Y,MAX.Y), xlim=c(MIN.X,MAX.X), main=, xlab="Environment IPCA1", ylab=yLabel)
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
}
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
}
title("Adaptation Map", line=4)
text(pred.yld[[nenv,ngen+1]]-abs(0.05*pred.yld[[nenv,ngen+1]]), pred.yld[nenv,c(1:ngen)], labels=geno$name,col=1)
text(pred.yld[[nenv,ngen+1]]-abs(0.03*pred.yld[[nenv,ngen+1]]), pred.yld[nenv,c(1:ngen)], labels=geno$name,col=1)
axis(side=3, at=Y3.sort[,1], labels=Y3.sort[,2],las=3, col=1)
par(cex=0.8)
#graph the lines
for (i in 1:ngen)  {
if (i==1)  {
yLabel<-paste("Predicted ", gsub("_means", "", yVar), sep="")
plot(pred.yld[[ngen+1]],pred.yld[[i]], pch=" ", ylim=c(MIN.Y,MAX.Y), xlim=c(MIN.X,MAX.X), main=, xlab="Environment IPCA1", ylab=yLabel)
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
}
abline(lm(pred.yld[[i]]~pred.yld[[ngen+1]]),col=i)
}
title("Adaptation Map", line=4)
text(pred.yld[[nenv,ngen+1]]-abs(0.03*max(pred.yld[[nenv,ngen+1]])), pred.yld[nenv,c(1:ngen)], labels=geno$name,col=1)
